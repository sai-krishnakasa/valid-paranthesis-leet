class Solution:
    def isValid(self, s: str) -> bool:
        stack=[]
        if len(s)==1:
            return False
        for i in s:
            if i=='{' or i=='[' or i== '(':
                stack.append(i)
            elif (len(stack)>0) :
                if (stack[-1]=='(' and i==')') or (stack[-1]=='[' and i==']') or (stack[-1]=='{' and i=='}'):
                    stack.pop(-1)
                else:
                    return False
            else:
                return False
        
        if len(stack)==0:
            return True
        return False
  
      PROBLEM STATEMENT:
     20. Valid Parentheses
Easy
Add to List
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.
Accepted
2.1M
Submissions
5.1M
            
